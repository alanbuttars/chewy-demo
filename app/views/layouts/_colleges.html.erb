<div class="container">
  <div class="full">
    <%= form_tag("/colleges/search", method: "get") do %>
      <%= label_tag(:query, "Search colleges") %>
      <%= search_field_tag(:query, @query) %>
      <%= select_tag(
        :label_code,
        options_from_collection_for_select(@labels, "code", "text", @label_code),
        prompt: "---"
      ) %>

      <%= hidden_field_tag(:latitude, @latitude) %>
      <%= hidden_field_tag(:longitude, @longitude) %>
      <%= hidden_field_tag(:zoom, @zoom) %>

      <%= submit_tag("Go") %>
    <% end %>
  </div>
</div>

<div class="container">
  <div class="left-half">
    <table>
      <thead>
        <tr>
          <th></th>
          <th>Name</th>
          <th>Enrollment</th>
          <th>City</th>
          <th>State</th>
        </tr>
      </thead>

      <tbody>
        <% @colleges.each_with_index do |college, i| %>
          <tr>
            <td><%= i + 1 %></td>
            <td><%= link_to college.name, college_path(college) %></td>
            <td><%= college.enrollment %></td>
            <td><%= college.city %></td>
            <td><%= college.state %></td>
        <% end %>
      </tbody>
    </table>
  </div>

  <div class="right-half">
    <div id="map"></div>
  </div>
</div>

<script>
  function initMap() {
    var center = null;
    var latitude = $("#latitude").val();
    var longitude = $("#longitude").val();
    var zoom = $("#zoom").val();

    if (latitude == "" || longitude == "" || zoom == "") {
      center = { lat: 39.34, lng: -94.77 }
      zoom = 4;
    } else {
      center = { lat: parseFloat(latitude), lng: parseFloat(longitude) }
      zoom = parseInt(zoom);
    }

    var map = new google.maps.Map(document.getElementById('map'), {
      center: center,
      zoom: zoom
    });

    map.addListener('click', function(e) {
      $("#latitude").val(e.latLng.lat());
      $("#longitude").val(e.latLng.lng());
      $("#zoom").val(map.getZoom());
      $("form").submit();
    });

    // Add some markers to the map.
    // Note: The code uses the JavaScript Array.prototype.map() method to
    // create an array of markers based on a given "locations" array.
    // The map() method here has nothing to do with the Google Maps API.
    var markers = locations.map(function(location, i) {
      return new google.maps.Marker({
        position: location,
        label: "" + (i + 1)
      });
    });

    // Add a marker clusterer to manage the markers.
    var markerCluster = new MarkerClusterer(map, markers,
        {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
  }
  var locations = <%= @colleges.map do |college|
    { lat: college.latitude, lng: college.longitude }
  end.to_json.html_safe %>
</script>
<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_API_KEY'] %>&callback=initMap"></script>
